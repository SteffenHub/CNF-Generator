memberSearchIndex = [{"p":"<Unnamed>","c":"SatSolver","l":"addRule(int[])"},{"p":"<Unnamed>","c":"SatSolver","l":"addVariable(int)"},{"p":"<Unnamed>","c":"Dialog","l":"askForCountSolver()"},{"p":"<Unnamed>","c":"Dialog","l":"askForFalseVars(SatSolver, int)","u":"askForFalseVars(SatSolver,int)"},{"p":"<Unnamed>","c":"Dialog","l":"askForFamilySize()"},{"p":"<Unnamed>","c":"Dialog","l":"askForGoalVariance()"},{"p":"<Unnamed>","c":"Dialog","l":"askForRuleSize()"},{"p":"<Unnamed>","c":"Dialog","l":"askForSeed()"},{"p":"<Unnamed>","c":"Dialog","l":"askForTrueVars(SatSolver, int)","u":"askForTrueVars(SatSolver,int)"},{"p":"<Unnamed>","c":"Dialog","l":"askHowManyVariables()"},{"p":"<Unnamed>","c":"Dialog","l":"askWantFamilies()"},{"p":"<Unnamed>","c":"Dialog","l":"buildFamilyRules(int[])"},{"p":"<Unnamed>","c":"Operation","l":"calculatePercentage(BigInteger, double)","u":"calculatePercentage(java.math.BigInteger,double)"},{"p":"<Unnamed>","c":"ConsoleInterface","l":"consoleInput(String)","u":"consoleInput(java.lang.String)"},{"p":"<Unnamed>","c":"ConsoleInterface","l":"ConsoleInterface()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"TxtConverter","l":"convertRulesToStringListCNF(List<int[]>, InputData, BigInteger, int, int, long, long)","u":"convertRulesToStringListCNF(java.util.List,InputData,java.math.BigInteger,int,int,long,long)"},{"p":"<Unnamed>","c":"InputData","l":"countSolver"},{"p":"<Unnamed>","c":"Dialog","l":"Dialog()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"InputData","l":"falseVars"},{"p":"<Unnamed>","c":"InputData","l":"familyRules"},{"p":"<Unnamed>","c":"SolverUsages","l":"findEqualVars(SatSolver)"},{"p":"<Unnamed>","c":"Dialog","l":"generateAndPrintFamilyRules(int, int, int, Random)","u":"generateAndPrintFamilyRules(int,int,int,java.util.Random)"},{"p":"<Unnamed>","c":"SolverUsages","l":"getAlwaysFalseVars(SatSolver, int)","u":"getAlwaysFalseVars(SatSolver,int)"},{"p":"<Unnamed>","c":"SolverUsages","l":"getAlwaysTrueVars(SatSolver, int)","u":"getAlwaysTrueVars(SatSolver,int)"},{"p":"<Unnamed>","c":"Dialog","l":"getAndPrintVariance(List<int[]>, int, int, int, String, Random)","u":"getAndPrintVariance(java.util.List,int,int,int,java.lang.String,java.util.Random)"},{"p":"<Unnamed>","c":"SolverUsages","l":"getDeterminedVars(SatSolver)"},{"p":"<Unnamed>","c":"SatSolver","l":"getHighestVar()"},{"p":"<Unnamed>","c":"SatSolver","l":"getModel()"},{"p":"<Unnamed>","c":"SatSolver","l":"getModelWith(int[])"},{"p":"<Unnamed>","c":"Main","l":"getNextRule(SatSolver, InputData, int[], int, Random)","u":"getNextRule(SatSolver,InputData,int[],int,java.util.Random)"},{"p":"<Unnamed>","c":"Operation","l":"getVariance_c2d(List<int[]>, int)","u":"getVariance_c2d(java.util.List,int)"},{"p":"<Unnamed>","c":"Operation","l":"getVariance_sharpSAT(List<int[]>, int)","u":"getVariance_sharpSAT(java.util.List,int)"},{"p":"<Unnamed>","c":"Main","l":"getVariance(List<int[]>, int, String)","u":"getVariance(java.util.List,int,java.lang.String)"},{"p":"<Unnamed>","c":"Operation","l":"getVariance(String, List<int[]>, int)","u":"getVariance(java.lang.String,java.util.List,int)"},{"p":"<Unnamed>","c":"SolverUsages","l":"getVarsCouldBeFalse(SatSolver, int)","u":"getVarsCouldBeFalse(SatSolver,int)"},{"p":"<Unnamed>","c":"SolverUsages","l":"getVarsCouldBeTrue(SatSolver, int)","u":"getVarsCouldBeTrue(SatSolver,int)"},{"p":"<Unnamed>","c":"InputData","l":"goalVariance"},{"p":"<Unnamed>","c":"InputData","l":"goalVarianceDeviation"},{"p":"<Unnamed>","c":"Main","l":"handleAlwaysFalseVars(SatSolver, int, int)","u":"handleAlwaysFalseVars(SatSolver,int,int)"},{"p":"<Unnamed>","c":"Main","l":"handleAlwaysTrueVars(SatSolver, int, int)","u":"handleAlwaysTrueVars(SatSolver,int,int)"},{"p":"<Unnamed>","c":"Main","l":"handleIsSatisfiableWithRuleAndAddRuleToSatSolver(SatSolver, List<int[]>)","u":"handleIsSatisfiableWithRuleAndAddRuleToSatSolver(SatSolver,java.util.List)"},{"p":"<Unnamed>","c":"InputData","l":"InputData()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"SolverUsages","l":"isHardConclusion(int, int, SatSolver)","u":"isHardConclusion(int,int,SatSolver)"},{"p":"<Unnamed>","c":"Operation","l":"isIn(int[], int)","u":"isIn(int[],int)"},{"p":"<Unnamed>","c":"Operation","l":"isIn(List<int[]>, int[])","u":"isIn(java.util.List,int[])"},{"p":"<Unnamed>","c":"SolverUsages","l":"isLogicalConclusion(int, int, SatSolver)","u":"isLogicalConclusion(int,int,SatSolver)"},{"p":"<Unnamed>","c":"SatSolver","l":"isSatisfiable()"},{"p":"<Unnamed>","c":"SatSolver","l":"isSatisfiableWith(int)"},{"p":"<Unnamed>","c":"SatSolver","l":"isSatisfiableWithClause(int[])"},{"p":"<Unnamed>","c":"SatSolver","l":"isSatisfiableWithClauses(int[][])"},{"p":"<Unnamed>","c":"SatSolver","l":"isSatisfiableWithConjunct(int[])"},{"p":"<Unnamed>","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"<Unnamed>","c":"InputData","l":"maxFamilySize"},{"p":"<Unnamed>","c":"InputData","l":"maxRuleSize"},{"p":"<Unnamed>","c":"InputData","l":"minFamilySize"},{"p":"<Unnamed>","c":"InputData","l":"minRuleSize"},{"p":"<Unnamed>","c":"InputData","l":"numberOfVariables"},{"p":"<Unnamed>","c":"Operation","l":"Operation()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Operation","l":"pointsToBigInt(BigInteger)","u":"pointsToBigInt(java.math.BigInteger)"},{"p":"<Unnamed>","c":"InputData","l":"randomGenerator"},{"p":"<Unnamed>","c":"SatSolver","l":"SatSolver()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"SatSolver","l":"SatSolver(int[][])","u":"%3Cinit%3E(int[][])"},{"p":"<Unnamed>","c":"SatSolver","l":"SatSolver(List<int[]>)","u":"%3Cinit%3E(java.util.List)"},{"p":"<Unnamed>","c":"Dialog","l":"scanner"},{"p":"<Unnamed>","c":"InputData","l":"seed"},{"p":"<Unnamed>","c":"SatSolver","l":"solver"},{"p":"<Unnamed>","c":"SolverUsages","l":"SolverUsages()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Dialog","l":"startDialog()"},{"p":"<Unnamed>","c":"InputData","l":"trueVars"},{"p":"<Unnamed>","c":"TxtConverter","l":"TxtConverter()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"TxtReaderWriter","l":"TxtReaderWriter()","u":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"InputData","l":"useFamilies"},{"p":"<Unnamed>","c":"InputData","l":"variance"},{"p":"<Unnamed>","c":"TxtReaderWriter","l":"writeArrayOfStrings(String, String[], boolean)","u":"writeArrayOfStrings(java.lang.String,java.lang.String[],boolean)"}];updateSearchResults();